
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


# OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH =  Path(__file__).resolve().parent / "assets/frame0"
# ASSETS_PATH =  Path(__file__).resolve().parent / "assets/frame0"
# OUTPUT_PATH / Path(r"D:\Proagraming\Python\ChatGPTAudioDownloader\FigmaDesignCode\build\assets\frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def create_window(choose_directory, execute_command):
    window = Tk()

    logo = PhotoImage(file=ASSETS_PATH / "Logo.png")
    window.call('wm', 'iconphoto', window._w, logo)
    
    window.title("ChatGPT Audio Downloader")

    BackgroundClr ="#131316"
    InputBoxBGClr = "#1E1E24"
    InputBoxFGClr = "#ffffff"

    window.geometry("540x532")
    window.configure(bg = f"{BackgroundClr}")


    canvas = Canvas(
        window,
        bg = f"{BackgroundClr}",
        height = 532,
        width = 540,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    
    download_btn_image = PhotoImage(
        file=relative_to_assets("button_1.png"))

    download_btn_image_on_hover = PhotoImage(
        file=relative_to_assets("button_1_on_hover.png"))

    download_btn = Button(
        image=download_btn_image,
        borderwidth=0,
        activebackground= f"{BackgroundClr}",
        highlightthickness=0,
        command=lambda: execute_command(command_entry,filename_entry, file_path_entry),
        relief="flat"
    )
    download_btn.place(
        x=72.0,
        y=446.0,
        width=396.0,
        height=48.0
    )

    file_path_text_box_img = PhotoImage(
        file=relative_to_assets("entry_1.png"))
    canvas.create_image(
        270.0,
        398.0,
        image=file_path_text_box_img
    )
    file_path_entry = Entry(
        bd=0,
        bg=f"{InputBoxBGClr}",
        fg=f"{InputBoxFGClr}",
        highlightthickness=0,
        insertbackground="#1570EF",
        font=("Poppins", 16)
    )
    file_path_entry.place(
        x=80.0,
        y=374.0,
        width=380.0,
        height=46.0
    )

    file_path_btn_image = PhotoImage(
        file=relative_to_assets("button_2.png"))
    file_path_btn_image_on_hover = PhotoImage(
        file=relative_to_assets("button_2_on_hover.png"))

    file_path_btn = Button(
        image=file_path_btn_image,
        borderwidth=0,
        activebackground= f"{BackgroundClr}",
        highlightthickness=0,
        command=lambda: choose_directory(file_path_entry),
        relief="flat"
    )
    file_path_btn.place(
        x=414.0,
        y=369.0,
        width=57.69230651855469,
        height=57.69230651855469
    )

    filename_entry_image = PhotoImage(
        file=relative_to_assets("entry_2.png"))

    canvas.create_image(
        270.0,
        294.0,
        image=filename_entry_image
    )
    filename_entry = Entry(
        bd=0,
        bg=f"{InputBoxBGClr}",
        fg=f"{InputBoxFGClr}",
        highlightthickness=0,
        insertbackground="#1570EF",
        font=("Poppins", 16)
    )
    filename_entry.place(
        x=80.0,
        y=270.0,
        width=380.0,
        height=46.0
    )

    canvas.create_text(
        72.0,
        347.0,
        anchor="nw",
        text="Choose Destination",
        fill="#D1D1D6",
        font=("Poppins Regular", 16 * -1)
    )

    canvas.create_text(
        72.0,
        242.0,
        anchor="nw",
        text="Filename",
        fill="#D1D1D6",
        font=("Poppins Regular", 16 * -1)
    )

    command_entry_image = PhotoImage(
        file=relative_to_assets("entry_3.png"))
    canvas.create_image(
        270.0,
        186.0,
        image=command_entry_image
    )
    command_entry = Entry(
        bd=0,
        bg=f"{InputBoxBGClr}",
        fg=f"{InputBoxFGClr}",
        highlightthickness=0,
        insertbackground="#1570EF",
        font=("Poppins", 16)
    )
    command_entry.place(
        x=80.0,
        y=162.0,
        width=380.0,
        height=46.0
    )

    canvas.create_text(
        72.0,
        134.0,
        anchor="nw",
        text="Audio File Src",
        fill="#D1D1D6",
        font=("Poppins Regular", 16 * -1)
    )

    canvas.create_text(
        72.0,
        62.0,
        anchor="nw",
        text="Download",
        fill="#FAFAFA",
        font=("Poppins SemiBold", 36 * -1)
    )

    canvas.create_text(
        230.0,
        26.0,
        anchor="nw",
        text=" Audio",
        fill="#FAFAFA",
        font=("Poppins SemiBold", 36 * -1)
    )

    canvas.create_text(
        72.0,
        26.0,
        anchor="nw",
        text="Chat-GPT ",
        fill="#FAFAFA",
        font=("Poppins SemiBold", 36 * -1)
    )


    file_path_btn.bind("<Enter>", lambda event, x=file_path_btn: on_enter(x, file_path_btn_image_on_hover))
    file_path_btn.bind("<Leave>", lambda event, x=file_path_btn: on_enter(x, file_path_btn_image))

    download_btn.bind("<Enter>", lambda event, x=download_btn: on_leave(x, download_btn_image_on_hover))
    download_btn.bind("<Leave>", lambda event, x=download_btn: on_leave(x, download_btn_image))

    def on_enter(x, path):
        x.configure(image=path)
        pass

    def on_leave(x, path):
        x.configure(image=path)
        pass


    window.resizable(False, False)
    window.mainloop()
